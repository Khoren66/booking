{"version":3,"sources":["API/index.js","action/rooms.actions.js","action/visitors.actions.js","action/bookings.actions.js","Thunks/rooms.thunk.js","Thunks/visitors.thunk.js","Thunks/bookings.thunk.js","Components/Info/CountInfo/CountInfo.js","Components/Inputs/FormRooms/FormRooms.js","Components/Info/TableRooms/TableRooms.js","screens/Rooms/Rooms.js","Components/Inputs/FormVisitors/FormVisitor.js","Components/Info/TableVisitors/TableVisitors.js","screens/Visitors/Visitors.js","Components/Inputs/FormBookings/FormBookings.js","Components/Info/TableBookings/TableBookings.js","screens/Bookings/Bookings.js","App.js","reducer/rooms.reducer.js","reducer/visitors.reducer.js","reducer/booking.reducers.js","reducer/index.js","store/store.js","index.js"],"names":["axiosInstance","axios","create","baseURL","responseType","Endpoint","EndpointFactory","rooms","roomsStatus","bookings","visitors","deleteUpdateRoom","id","deleteUpdateBooking","deleteUpdateVisitor","createRoomsSuccsess","data","type","payload","editRoomsSuccsess","removeRoomSuccsess","createVisitorSuccsess","editVisitorSuccsess","removeVisitorSuccsess","createBookingSuccsess","removeBookingSuccsess","editBookingSuccsess","getStatusThunk","dispatch","a","async","api","get","response","status","Error","getRoomsThunk","getVisitorsThunk","getBookingsThunk","connect","state","gettingStatus","getStatus","memo","useEffect","className","Object","keys","map","e","i","key","form","floor","beds","roomId","balcony","roomsData","createRoom","date","Date","put","statusText","post","bookedAt","moment","format","available","createRoomThunk","getRooms","formData","useState","newRoom","setNewRoom","showError","setShowError","handleInputChange","event","target","name","value","checked","onChange","style","display","color","class","onClick","setTimeout","gettingRooms","props","edit","remove","removeRoom","delete","removeRoomThunk","setForm","handleRemoveRoom","handleEditRoom","person","personName","personId","cardNumber","createdDate","visitorsData","createVisitor","createVisitorThunk","getVisitors","newVisitor","setNewVisitor","gettingVisitors","removeVisitor","removeVisitorThunk","handleRemoveVisitor","handleEditVisitor","booking","roomNumber","bookingsData","createBooking","createBookingThunk","getBookings","newBooking","setNewBooking","find","p","room","r","hidden","defaultValue","disabled","gettingBookings","removeBooking","removeBookingThunk","handleRemoveBooking","handleEditBooking","links","App","link","to","exact","path","component","Rooms","Bookings","Visitors","render","initialState","combineReducers","action","filtered","filter","elem","lastData","editData","booingsData","middleWare","thunk","composeEnh","compose","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","reducers","applyMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2b7ec6d7.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport EndpointFactory from \"axios-endpoints\";\r\nconst axiosInstance = axios.create({\r\n  baseURL: \"https://it-blog-posts.herokuapp.com/api/\",\r\n  responseType: \"json\"\r\n});\r\nconst Endpoint = EndpointFactory(axiosInstance);\r\nexport default {\r\n  rooms       : new Endpoint(\"rooms\"),\r\n  roomsStatus : new Endpoint(\"rooms/status\"),\r\n  bookings    : new Endpoint(\"roomBookings\"),\r\n  visitors    : new Endpoint(\"visitors\"),\r\n  deleteUpdateRoom  :(id)=> new Endpoint(\"rooms/\"+ id),\r\n  deleteUpdateBooking  :(id)=> new Endpoint(\"roomBookings/\" + id),\r\n  deleteUpdateVisitor :(id)=> new Endpoint(\"visitors/\" + id)\r\n}\r\n\r\n","export const getStatusRequest = () => ({\r\n    type: 'GET_STATUS_REQUEST'\r\n  })\r\n  export const getStatusSuccsess = (data) => ({\r\n    type: 'GET_STATUS_SUCCSESS',\r\n    payload: data\r\n  })\r\n  export const getStatusFailure = () => ({\r\n    type: 'GET_STATUS_FAILURE'\r\n  })\r\n\r\n\r\n  export const getRoomsRequest = () => ({\r\n    type: 'GET_ROOMS_REQUEST'\r\n  })\r\n  export const getRoomsSuccsess = (data) => ({\r\n    type: 'GET_ROOMS_SUCCSESS',\r\n    payload: data\r\n  })\r\n  export const getRoomsFailure = () => ({\r\n    type: 'GET_ROOMS_FAILURE'\r\n  })\r\n\r\n\r\n  export const createRoomsSuccsess = (data) => ({\r\n    type: 'CREATE_ROOM_SUCCSESS',\r\n    payload: data\r\n  })\r\n  export const createRoomsFailure = () => ({\r\n    type: 'CREATE_ROOM_FAILURE'\r\n  })\r\n\r\n  export const editRoomsSuccsess = (data) => ({\r\n    type: 'EDIT_ROOM_SUCCSESS',\r\n    payload: data\r\n  })\r\n  export const editRoomsFailure = () => ({\r\n    type: 'Edit_ROOM_FAILURE'\r\n  })\r\n\r\n\r\n  export const removeRoomSuccsess = (id) => ({\r\n    type: 'REMOVE_ROOM_SUCCSESS',\r\n    payload: id\r\n  })\r\n  export const removeRoomFailure = () => ({\r\n    type: 'REMOVE_ROOM_FAILURE'\r\n  })\r\n\r\n  ","  export const getVisitorsRequest = () => ({\r\n    type: 'GET_VISITORS_REQUEST'\r\n  })\r\n  export const getVisitorsSuccsess = (data) => ({\r\n    type: 'GET_VISITORS_SUCCSESS',\r\n    payload: data\r\n  })\r\n  export const getVisitorsFailure = () => ({\r\n    type: 'GET_VISITORS_FAILURE'\r\n  })\r\n\r\n//Create Visitor\r\n  export const createVisitorSuccsess = (data) => ({\r\n    type: 'CREATE_VISITOR_SUCCSESS',\r\n    payload: data\r\n  })\r\n  export const createVisitorFailure = () => ({\r\n    type: 'CREATE_VISITOR_FAILURE'\r\n  })\r\n\r\n//Edit Visitor\r\n  export const editVisitorSuccsess = (data) => ({\r\n    type: 'EDIT_VISITOR_SUCCSESS',\r\n    payload: data\r\n  })\r\n  export const editVisitorFailure = () => ({\r\n    type: 'EDIT_VISITOR_FAILURE'\r\n  })\r\n\r\n  //Remove Visitor\r\n  export const removeVisitorSuccsess = (id) => ({\r\n    type: 'REMOVE_VISITOR_SUCCSESS',\r\n    payload: id\r\n  })\r\n  export const removeVisitorFailure = () => ({\r\n    type: 'REMOVE_VISITOR_FAILURE'\r\n  })","  \r\nexport const getBookingsRequest = () => ({\r\n    type: 'GET_BOOKINGS_REQUEST'\r\n  })\r\n  \r\n  export const getBookingsSuccsess = (data) => ({\r\n    type: 'GET_BOOKINGS_SUCCSESS',\r\n    payload: data\r\n  })\r\n  \r\n  export const getBookingsFailure = () => ({\r\n    type: 'GET_BOOKINGS_FAILURE'\r\n  })\r\n  \r\n\r\n\r\n//CREATE BOOKING\r\n  export const createBookingSuccsess = (data) => ({\r\n    type: 'CREATE_BOOKING_SUCCSESS',\r\n    payload: data\r\n  })\r\n  export const createBookingFailure = () => ({\r\n    type: 'CREATE_BOOKING_FAILURE'\r\n  })\r\n \r\n  //Remove BOOKING\r\n  export const removeBookingSuccsess = (id) => ({\r\n    type: 'REMOVE_BOOKING_SUCCSESS',\r\n    payload: id\r\n  })\r\n  export const removeBookingFailure = () => ({\r\n    type: 'REMOVE_BOOKING_FAILURE'\r\n  })\r\n\r\n\r\n   //Edit BOOKING\r\n   export const editBookingSuccsess = (data) => ({\r\n    type: 'EDIT_BOOKING_SUCCSESS',\r\n    payload: data\r\n  })\r\n  export const editBookingFailure = () => ({\r\n    type: 'EDIT_BOOKING_FAILURE'\r\n  })","import api from '../API';\r\nimport {getStatusRequest,getStatusSuccsess,getStatusFailure,getRoomsRequest, getRoomsSuccsess, getRoomsFailure,createRoomsSuccsess,editRoomsSuccsess,removeRoomSuccsess,removeRoomFailure} from '../action';\r\nimport moment from 'moment'\r\n\r\nexport const getStatusThunk = () => async (dispatch) => {\r\n    try {\r\n      dispatch(getStatusRequest());\r\n      const response = await api.roomsStatus.get();\r\n      if (response.status !== 200) {\r\n        throw new Error('Cannot get status')\r\n      }\r\n      dispatch(getStatusSuccsess(response.data.status));\r\n    } catch (error) {\r\n      dispatch(getStatusFailure());\r\n    }\r\n  }\r\n\r\n  export const getRoomsThunk = () => async (dispatch) => {\r\n    try {\r\n      dispatch(getRoomsRequest());\r\n      const response = await api.rooms.get();\r\n      if (response.status !== 200) {\r\n        throw new Error('Cannot get Rooms')\r\n      }\r\n      dispatch(getRoomsSuccsess(response.data));\r\n    } catch (error) {\r\n      dispatch(getRoomsFailure());\r\n    }\r\n  }\r\n\r\n  export const createRoomThunk = (data) => async (dispatch) => {\r\n    try {\r\n      let date = new Date();\r\n      if(data.id){\r\n        const response = await api.deleteUpdateRoom(data.id).put({...data})\r\n        if (response.statusText !== \"OK\") {\r\n          throw new Error('Cannot update Room')\r\n        }\r\n        dispatch(editRoomsSuccsess(response.data))\r\n      }else{\r\n        const response = await api.rooms.post({\r\n          bookedAt: moment(date).format('DD/MM/YYYY'),\r\n          available: true,\r\n          ...data\r\n        }); \r\n        dispatch(createRoomsSuccsess(response.data))\r\n        if (response.statusText !== \"OK\") {\r\n          throw new Error('Cannot create Room')\r\n        }\r\n      }      \r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n\r\n  export const removeRoomThunk = (id) => async (dispatch) => {\r\n    try {\r\n      await api.deleteUpdateRoom(id).delete();\r\n      dispatch(removeRoomSuccsess(id))     \r\n    } catch (error) {\r\n      dispatch(removeRoomFailure());\r\n    }\r\n  }\r\n\r\n  ","import api from '../API';\r\nimport { getVisitorsRequest, getVisitorsSuccsess, getVisitorsFailure, createVisitorSuccsess, editVisitorSuccsess, removeVisitorFailure, removeVisitorSuccsess } from '../action';\r\n\r\nexport const getVisitorsThunk = () => async (dispatch) => {\r\n  try {\r\n    dispatch(getVisitorsRequest());\r\n    const response = await api.visitors.get();\r\n    if (response.status !== 200) {\r\n      throw new Error('Cannot get Visitors')\r\n    }\r\n    dispatch(getVisitorsSuccsess(response.data));\r\n  } catch (error) {\r\n    dispatch(getVisitorsFailure());\r\n  }\r\n}\r\n\r\nexport const createVisitorThunk = (data) => async (dispatch) => {\r\n  try {\r\n    if (data.id) {\r\n      const response = await api.deleteUpdateVisitor(data.id).put({ ...data })\r\n      if (response.statusText !== \"OK\") {\r\n        throw new Error('Cannot update Visitor')\r\n      }\r\n      dispatch(editVisitorSuccsess(response.data))\r\n    } else {\r\n      const response = await api.visitors.post({\r\n        ...data\r\n      });\r\n      dispatch(createVisitorSuccsess(response.data))\r\n      if (response.statusText !== \"OK\") {\r\n        throw new Error('Cannot create Visitor')\r\n      }\r\n    }\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\n\r\nexport const removeVisitorThunk = (id) => async (dispatch) => {\r\n  try {\r\n    await api.deleteUpdateVisitor(id).delete();\r\n    dispatch(removeVisitorSuccsess(id))\r\n  } catch (error) {\r\n    dispatch(removeVisitorFailure());\r\n  }\r\n}","import api from '../API';\r\nimport { getBookingsRequest, getBookingsSuccsess, getBookingsFailure, createBookingSuccsess, editBookingSuccsess, removeBookingFailure, removeBookingSuccsess } from '../action';\r\n\r\nexport const getBookingsThunk = () => async (dispatch) => {\r\n  try {\r\n    dispatch(getBookingsRequest());\r\n    const response = await api.bookings.get();\r\n    if (response.status !== 200) {\r\n      throw new Error('Cannot get Bookings')\r\n    }\r\n    dispatch(getBookingsSuccsess(response.data));\r\n  } catch (error) {\r\n    dispatch(getBookingsFailure());\r\n  }\r\n}\r\n\r\nexport const createBookingThunk = (data) => async (dispatch) => {\r\n  try {\r\n    if (data.id) {\r\n      const response = await api.deleteUpdateBooking(data.id).put({ ...data })\r\n      if (response.statusText !== \"OK\") {\r\n        throw new Error('Cannot update Booking')\r\n      }\r\n      dispatch(editBookingSuccsess(response.data))\r\n    } else {\r\n      const response = await api.bookings.post({\r\n        ...data\r\n      });\r\n      dispatch(createBookingSuccsess(response.data))\r\n      if (response.statusText !== \"OK\") {\r\n        throw new Error('Cannot create Visitor')\r\n      }\r\n    }\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\n\r\nexport const removeBookingThunk = (id) => async (dispatch) => {\r\n  try {\r\n    await api.deleteUpdateBooking(id).delete();\r\n    dispatch(removeBookingSuccsess(id))\r\n  } catch (error) {\r\n    dispatch(removeBookingFailure());\r\n  }\r\n}","import React,{useEffect, memo} from 'react'\r\nimport { getStatusThunk } from '../../../Thunks'\r\nimport { connect } from 'react-redux';\r\nimport './CountInfo.css'\r\nconst CountInfo =({ getStatus, status })=>{\r\n      \r\n  useEffect(() => {\r\n     getStatus()\r\n  }, []);\r\n    return(\r\n        <div className='allInfo'>\r\n        {status && Object.keys(status).map((e, i) =>\r\n          <div className=\"detail\" key={i}>\r\n            <span>{status[e]}</span>\r\n            <span>{e}</span>\r\n          </div>)}\r\n      </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { rooms: { status, gettingStatus } } = state;\r\n    return {\r\n      status,\r\n      gettingStatus\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      getStatus: () => {\r\n        dispatch(getStatusThunk())\r\n      }\r\n    }\r\n  }\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(memo(CountInfo));","import React, { useState, useEffect, memo } from 'react'\r\nimport { getRoomsThunk, createRoomThunk, getStatusThunk } from '../../../Thunks'\r\nimport { connect } from 'react-redux';\r\nimport './FormRooms.css'\r\n\r\nlet form = {\r\n  floor: \"\",\r\n  beds: \"\",\r\n  roomId: \"\",\r\n  balcony: false\r\n}\r\nconst FormRooms = ({ createRoom, getRooms, getStatus, formData }) => {\r\n  const [newRoom, setNewRoom] = useState(form)\r\n  const [showError, setShowError] = useState(\"none\");\r\n\r\n  useEffect(() => {\r\n    setNewRoom({\r\n      ...form,\r\n      ...formData\r\n    })\r\n  }, [formData])\r\n\r\n\r\n  const handleInputChange = (event) => {\r\n    const { target: { name, value, checked } } = event;\r\n    setNewRoom({\r\n      ...newRoom,\r\n      [name]: name === 'balcony' ? checked : value\r\n    })\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    if (newRoom.beds && newRoom.floor && newRoom.roomId) {\r\n      createRoom(newRoom)\r\n      setTimeout(() => {\r\n        getRooms()\r\n        getStatus()\r\n      }, 0);\r\n      setNewRoom({ ...form })\r\n      setShowError(\"none\")\r\n    }else{\r\n      setShowError(\"block\")\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n\r\n    <div className='form'>\r\n      <div>\r\n        <h3>Add New Room</h3>\r\n        <label>\r\n          <span>Floor</span>\r\n          <input type=\"number\" onChange={handleInputChange} value={newRoom.floor} name='floor' id=\"floor\"></input>\r\n        </label>\r\n        <label>\r\n          <span>Beds</span>\r\n          <input type=\"number\" onChange={handleInputChange} value={newRoom.beds} name='beds' id=\"beds\"></input>\r\n        </label>\r\n        <label>\r\n          <span>Balcony</span>\r\n          <input onChange={handleInputChange} value={newRoom.balcony} checked={newRoom.balcony ? true : false} name='balcony' type=\"checkbox\" id=\"balcony\"></input>\r\n        </label>\r\n        <label>\r\n          <span>Room Number</span>\r\n          <input type=\"number\" onChange={handleInputChange} value={newRoom.roomId} name='roomId' id=\"roomId\"></input>\r\n        </label>\r\n      </div>\r\n\r\n      <div id=\"myModal\" style={{display:`${showError}`,color:\"red\"}} class=\"modal\">\r\n        <div class=\"modal-content\">\r\n          <span class=\"close\"></span>\r\n          <h3>Please fill all fields...</h3>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <button className=\"formButton\" onClick={handleSubmit}>{newRoom.id ? \"Update\" : \"Create\"}</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { rooms: { roomsData } } = state;\r\n  return {\r\n    roomsData,\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createRoom: (data) => {\r\n      dispatch(createRoomThunk(data))\r\n    },\r\n    getRooms: () => {\r\n      dispatch(getRoomsThunk())\r\n    },\r\n    getStatus: () => {\r\n      dispatch(getStatusThunk())\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(memo(FormRooms));\r\n","import React, { memo, useEffect} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getRoomsThunk ,getStatusThunk} from '../../../Thunks'\r\n//import Spinner from '../../Spinner/Spinner';\r\nimport './TableRooms.css'\r\n\r\nconst TableRooms = (props) => {\r\n  useEffect(() => {\r\n    const getData = async () => {await props.getRooms()}\r\n    getData()\r\n  }, []) \r\n\r\n  return (\r\n    <div className=\"tableRooms\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Booked</th>\r\n            <th>Floor</th>\r\n            <th>Beds</th>\r\n            <th>Balcony</th>\r\n            <th>Number</th>\r\n            <th>Edit</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            props.roomsData && props.roomsData.map((e, i) => {\r\n              return <tr key={e.id}>\r\n                <td>{++i}</td>\r\n                <td>{e.bookedAt}</td>\r\n                <td>{e.floor}</td>\r\n                <td>{e.beds}</td>\r\n                <td>{e.balcony ? \"Yes\" : \"No\"}</td>\r\n                <td>{e.roomId}</td>\r\n                <td><button onClick={()=>{props.edit(e)}}>Edit</button></td>\r\n                <td><button onClick={()=>{props.remove(e.id)}}>Delete</button></td>\r\n              </tr>\r\n            })}\r\n\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { rooms } = state\r\n  const { roomsData, gettingRooms } = rooms;\r\n  return {\r\n    roomsData,\r\n    gettingRooms\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getRooms: () => {\r\n      dispatch(getRoomsThunk())\r\n    },\r\n    getStatus: () => {\r\n      dispatch(getStatusThunk())\r\n    },\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(memo(TableRooms));","import React,{useState} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {getStatusThunk, removeRoomThunk,getRoomsThunk} from '../../Thunks'\r\nimport './rooms.styles.css'\r\nimport CountInfo from '../../Components/Info/CountInfo/CountInfo'\r\nimport FormRooms from '../../Components/Inputs/FormRooms/FormRooms';\r\nimport TableRooms from '../../Components/Info/TableRooms/TableRooms';\r\n\r\n\r\nconst  Rooms = ({removeRoom,getRooms,getStatus})=> {\r\nconst [formData,setForm]= useState({})\r\n\r\n\r\nconst handleRemoveRoom=(id)=>{\r\n  removeRoom(id)\r\n  getRooms()\r\n  getStatus()\r\n}\r\n\r\nconst handleEditRoom=(data)=>{\r\n  setForm(data)\r\n}\r\n\r\n    return (\r\n    <div className=\"rooms\">\r\n      <aside className=\"asideRoom\">\r\n      <CountInfo/>\r\n      <FormRooms formData={formData}/>\r\n      </aside>  \r\n      <main className=\"mainTable\">\r\n      <TableRooms\r\n       remove={(id)=>handleRemoveRoom(id)}\r\n       edit={(data)=>handleEditRoom(data)}\r\n      />\r\n      </main>\r\n    </div>\r\n      )\r\n  }\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { rooms } = state\r\n  return {\r\n    rooms\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getStatus: () => {\r\n        dispatch(getStatusThunk())\r\n    },\r\n    removeRoom:(id)=>{\r\n      dispatch(removeRoomThunk(id))\r\n    },\r\n    getRooms: () => {\r\n      dispatch(getRoomsThunk())\r\n    }\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Rooms);","import React, { useState, memo, useEffect } from 'react';\r\nimport { getVisitorsThunk, createVisitorThunk } from '../../../Thunks'\r\nimport { connect } from 'react-redux';\r\nimport './FormVisitor.css'\r\n\r\nlet person = {\r\n    personName: \"\",\r\n    personId: \"\",\r\n    cardNumber: \"\",\r\n    createdDate: \"\",\r\n}\r\nconst FormVisitors = ({ getVisitors, createVisitor, formData }) => {\r\n    const [newVisitor, setNewVisitor] = useState(person)\r\n    const [showError, setShowError] = useState(\"none\");\r\n\r\n    useEffect(() => {\r\n        setNewVisitor({\r\n            ...person,\r\n            ...formData\r\n        })\r\n    }, [formData])\r\n\r\n\r\n    const handleSubmit = () => {\r\n        if (newVisitor.personName && newVisitor.personId && newVisitor.cardNumber && newVisitor.createdDate) {\r\n            createVisitor(newVisitor)\r\n            setTimeout(() => getVisitors(), 0)\r\n            setNewVisitor(person)\r\n            setShowError(\"none\")\r\n        } else {\r\n            setShowError(\"block\")\r\n        }\r\n\r\n    }\r\n    const handleInputChange = (event) => {\r\n        const { target: { name, value } } = event;\r\n        setNewVisitor({\r\n            ...newVisitor,\r\n            [name]: value\r\n        })\r\n    }\r\n    return (\r\n        <div className='formVisitor'>\r\n            <div>\r\n                <h3>Add New Person</h3>\r\n                <label>\r\n                    <span>Person Name</span>\r\n                    <input type=\"text\" onChange={handleInputChange} value={newVisitor.personName} name='personName' id=\"personName\"></input>\r\n                </label>\r\n                <label>\r\n                    <span>Person ID</span>\r\n                    <input type=\"text\" onChange={handleInputChange} value={newVisitor.personId} name='personId' id=\"personId\"></input>\r\n                </label>\r\n                <label>\r\n                    <span>Card Number</span>\r\n                    <input onChange={handleInputChange} value={newVisitor.cardNumber} name='cardNumber' id=\"cardNumber\"></input>\r\n                </label>\r\n                <label>\r\n                    <span>Date</span>\r\n                    <input type=\"date\" onChange={handleInputChange} value={newVisitor.createdDate} name='createdDate' id=\"createdDate\"></input>\r\n                </label>\r\n            </div>\r\n\r\n            <div id=\"myModal\" style={{ display: `${showError}`, color: \"red\" }} class=\"modal\">\r\n                <div class=\"modal-content\">\r\n                    <span class=\"close\"></span>\r\n                    <h3>Please fill all fields...</h3>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <button onClick={handleSubmit} className=\"formButton\" >{newVisitor.id ? \"Update\" : \"Create\"}</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    const { visitors: { visitorsData } } = state;\r\n    return {\r\n        visitorsData,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createVisitor: (data) => {\r\n            dispatch(createVisitorThunk(data))\r\n        },\r\n        getVisitors: () => {\r\n            dispatch(getVisitorsThunk())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(memo(FormVisitors));","import React, { memo, useEffect} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getVisitorsThunk} from '../../../Thunks'\r\nimport moment from 'moment'\r\n//import Spinner from '../../Spinner/Spinner';\r\nimport './TableVisitors.styles.css'\r\n\r\nconst TableVisitors = (props) => {\r\n  useEffect(() => {\r\n    const getData = async () => {await props.getVisitors()}\r\n    getData()\r\n  }, []) \r\n\r\n  return (\r\n    <div className=\"tableRooms\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Person Name</th>\r\n            <th>Person ID</th>\r\n            <th>Date</th>\r\n            <th>Card Number</th>\r\n            <th>Edit</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            props.visitorsData && props.visitorsData.map((e, i) => {\r\n              return <tr key={e.id}>\r\n                <td>{++i}</td>\r\n                <td>{e.personName}</td>\r\n                <td>{e.personId}</td>\r\n                <td>{moment(e.createdDate).format(\"DD/MM/YYYY\")}</td>\r\n                <td>{e.cardNumber}</td>\r\n                <td><button onClick={()=>{props.edit(e)}}>Edit</button></td>\r\n                <td><button onClick={()=>{props.remove(e.id)}}>Delete</button></td>\r\n              </tr>\r\n            })}\r\n\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const {visitors} = state\r\n  const { visitorsData, gettingVisitors } = visitors;\r\n  return {\r\n    visitorsData,\r\n    gettingVisitors\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getVisitors: () => {\r\n      dispatch(getVisitorsThunk())\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(memo(TableVisitors));","import React,{useState} from 'react'\r\nimport FormVisitors from '../../Components/Inputs/FormVisitors/FormVisitor'\r\nimport './visitors.styles.css'\r\nimport {connect} from 'react-redux'\r\nimport {getVisitorsThunk,removeVisitorThunk} from '../../Thunks'\r\nimport TableVisitors from '../../Components/Info/TableVisitors/TableVisitors'\r\nconst Visitors = ({removeVisitor,getVisitors})=>{\r\n    const [formData,setForm]= useState({})\r\n\r\n    const handleRemoveVisitor=(id)=>{\r\n        removeVisitor(id)\r\n        getVisitors()\r\n    }\r\n\r\n    const handleEditVisitor=(data)=>{\r\n        setForm(data)\r\n    }\r\n    return(\r\n        <div className=\"visitors\">\r\n            <aside className=\"asideRoom\">\r\n                <FormVisitors formData={formData}/>\r\n            </aside>\r\n            <main className=\"mainTable\">\r\n                <TableVisitors\r\n                    remove={(id)=>handleRemoveVisitor(id)}\r\n                    edit={(data)=>handleEditVisitor(data)}\r\n                />\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { visitors } = state\r\n    return {\r\n        visitors\r\n    }\r\n  }\r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      removeVisitor:(id)=>{\r\n        dispatch(removeVisitorThunk(id))\r\n      },\r\n      getVisitors: () => {\r\n        dispatch(getVisitorsThunk())\r\n      }\r\n    }\r\n  }\r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Visitors);","import React, { useState, memo, useEffect } from 'react';\r\nimport { getBookingsThunk, createBookingThunk, getVisitorsThunk, getRoomsThunk } from '../../../Thunks'\r\nimport { connect } from 'react-redux';\r\nimport './FormBookings.css'\r\n\r\nlet booking = {\r\n    personId: \"\",\r\n    personName: \"\",\r\n    roomId: \"\",\r\n    roomNumber: \"\",\r\n    bookedAt: \"\",\r\n}\r\nconst FormBookings = ({ getBookings, createBooking, formData, getVisitors, getRooms, visitorsData, roomsData }) => {\r\n    const [newBooking, setNewBooking] = useState(booking)\r\n    const [showError,setShowError] = useState(\"none\")\r\n    useEffect(() => {\r\n        getVisitors()\r\n        getRooms()\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        setNewBooking({\r\n            ...booking,\r\n            ...formData\r\n        })\r\n    }, [formData])\r\n\r\n    const handleSubmit = () => {\r\n        if(newBooking.personName && newBooking.roomId && newBooking.bookedAt){\r\n            createBooking(newBooking)\r\n            setTimeout(() => getBookings(), 0)\r\n            setNewBooking(booking)\r\n            setShowError(\"none\")\r\n        }else{\r\n            setShowError(\"block\")\r\n        }\r\n        \r\n    }\r\n    const handleInputChange = (event, data) => {\r\n        const { target: { name, value } } = event;\r\n        if (name === \"personId\") {\r\n            let person = visitorsData.find(p => p.personId === value).personName\r\n            setNewBooking({\r\n                ...newBooking,\r\n                [name]: value,\r\n                \"personName\": person\r\n            })\r\n        }\r\n        else if (name === \"roomId\") {\r\n            let room = roomsData.find(r => r.id === value).roomId\r\n            setNewBooking({\r\n                ...newBooking,\r\n                [name]: value,\r\n                \"roomNumber\": room\r\n            })\r\n        }\r\n        else {\r\n            setNewBooking({\r\n                ...newBooking,\r\n                [name]: value,\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <div className='formBookings'>\r\n            <div>\r\n                <h3>New Booking</h3>\r\n                <label>\r\n                    <span>Person Name</span>\r\n                    <select name='personId' value={newBooking.personId} onChange={(data) => handleInputChange(data)} >\r\n                        <option hidden defaultValue>Select</option>\r\n                        {visitorsData.map((i) => {\r\n                            return <option value={i.personId} data={i} key={i.id}>{i.personName}</option>\r\n                        })}\r\n                    </select>\r\n                </label>\r\n                <label>\r\n                    <span>Person ID</span>\r\n                    <input disabled type=\"text\" onChange={handleInputChange} value={newBooking.personId} name='personId' id=\"personId\"></input>\r\n                </label>\r\n                <label>\r\n                    <span>Room Number</span>\r\n                    <select name='roomId' value={newBooking.roomId} onChange={handleInputChange}>\r\n                        <option hidden defaultValue>Select</option>\r\n                        {roomsData.map((i) => {\r\n                            return <option value={i.id} key={i.id}>Room:{i.roomId} - Beds:{i.beds} - Floor:{i.floor} - Balcony:{i.balcony ? \"Yes\" : \"No\"}</option>\r\n                        })}\r\n                    </select>\r\n                </label>\r\n                <label>\r\n                    <span>Date</span>\r\n                    <input type=\"date\" onChange={handleInputChange} value={newBooking.bookedAt} name='bookedAt' id=\"bookedAt\"></input>\r\n                </label>\r\n            </div>\r\n\r\n            <div id=\"myModal\" style={{ display: `${showError}`, color: \"red\" }} class=\"modal\">\r\n                <div class=\"modal-content\">\r\n                    <span class=\"close\"></span>\r\n                    <h3>Please fill all fields...</h3>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <button onClick={handleSubmit} className=\"formButton\" >{newBooking.id ? \"Update\" : \"Create\"}</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    const { bookings: { bookingsData } } = state;\r\n    const { visitors: { visitorsData } } = state;\r\n    const { rooms: { roomsData } } = state;\r\n    return {\r\n        bookingsData,\r\n        visitorsData,\r\n        roomsData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createBooking: (data) => {\r\n            dispatch(createBookingThunk(data))\r\n        },\r\n        getBookings: () => {\r\n            dispatch(getBookingsThunk())\r\n        },\r\n        getVisitors: () => {\r\n            dispatch(getVisitorsThunk())\r\n        },\r\n        getRooms: () => {\r\n            dispatch(getRoomsThunk())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(memo(FormBookings));","import React, { memo, useEffect} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getBookingsThunk} from '../../../Thunks'\r\nimport moment from 'moment'\r\n//import Spinner from '../../Spinner/Spinner';\r\nimport './TableBookings.styles.css'\r\n\r\nconst TableBookings = (props) => {\r\n  useEffect(() => {\r\n    const getData = async () => {await props.getBookings()}\r\n    getData()\r\n  }, []) \r\n\r\n  return (\r\n    <div className=\"tableRooms\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Person Name</th>\r\n            <th>Person ID</th>\r\n            <th>Date</th>\r\n            <th>Room Number</th>\r\n            <th>Edit</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            props.bookingsData && props.bookingsData.map((e, i) => {\r\n              return <tr key={e.id}>\r\n                <td>{++i}</td>\r\n                <td>{e.personName}</td>\r\n                <td>{e.personId}</td>\r\n                <td>{moment(e.bookedAt).format(\"DD/MM/YYYY\")}</td>\r\n                <td>{e.roomNumber}</td>\r\n                <td><button onClick={()=>{props.edit(e)}}>Edit</button></td>\r\n                <td><button onClick={()=>{props.remove(e.id)}}>Delete</button></td>\r\n              </tr>\r\n            })}\r\n\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const {bookings} = state\r\n  const { bookingsData, gettingBookings } = bookings;\r\n  return {\r\n    bookingsData,\r\n    gettingBookings\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getBookings: () => {\r\n      dispatch(getBookingsThunk())\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(memo(TableBookings));","import React, { useState } from 'react'\r\nimport FormBookings from '../../Components/Inputs/FormBookings/FormBookings'\r\nimport './bookings.styles.css'\r\nimport {connect} from 'react-redux'\r\nimport TableBookings from '../../Components/Info/TableBookings/TableBookings'\r\nimport {getBookingsThunk, removeBookingThunk} from '../../Thunks'\r\n\r\n\r\nconst Bookings = ({removeBooking,getBookings}) => {\r\n    const [formData, setForm] = useState({})\r\n\r\n\r\n    const handleRemoveBooking = (id) => {\r\n        removeBooking(id)\r\n        getBookings()\r\n    }\r\n\r\n    const handleEditBooking = (data) => {\r\n        setForm(data)\r\n    }\r\n    return (\r\n        <div className=\"bookings\">\r\n            <aside className='asideRoom'>\r\n                <FormBookings formData={formData} />\r\n            </aside>\r\n            <main className='mainTable'> \r\n                <TableBookings\r\n                    remove={(id) => handleRemoveBooking(id)}\r\n                    edit={(data) => handleEditBooking(data)}\r\n                />\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    const { bookings } = state\r\n    return {\r\n        bookings\r\n    }\r\n  }\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      removeBooking:(id)=>{\r\n        dispatch(removeBookingThunk(id))\r\n      },\r\n      getBookings: () => {\r\n        dispatch(getBookingsThunk())\r\n      }\r\n    }\r\n  }\r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Bookings);","import React from 'react';\nimport Rooms from './screens/Rooms';\nimport Visitors from './screens/Visitors';\nimport Bookings from './screens/Bookings'\nimport './App.css';\nimport { HashRouter, Switch, Route, Redirect,NavLink } from 'react-router-dom'\nconst links = [\n  'Rooms',\n  'Bookings',\n  'Visitors'\n]\nfunction App() {\n  return (\n    <HashRouter>\n    <header />\n    <nav>\n        <div>\n          {links.map(link => <NavLink className=\"headerLink\" key={link} to={link}>{link}</NavLink>)}\n        </div>\n      </nav>\n    <div className='app'>\n      <Switch>\n        <Route exact path=\"/rooms\" component={Rooms} />\n        <Route exact path=\"/bookings\" component={Bookings} />\n        <Route exact path=\"/visitors\" component={Visitors} /> \n        <Route render={() => <Redirect to='/Rooms' />} />\n      </Switch>\n    </div>\n  </HashRouter>\n  );\n}\n\nexport default App;\n","const initialState = {\r\n    gettingStatus:false,\r\n    status:{\r\n        rooms:0,\r\n        bookings:0,\r\n        visitors:0\r\n    },\r\n    gettingRooms: false,\r\n    roomsData: [],\r\n}\r\n\r\nexport default function roomsReducer(state = initialState, action) {\r\nswitch (action.type) {\r\n    case \"GET_STATUS_REQUEST\":    \r\n        return {\r\n            ...state,\r\n            gettingStatus:true\r\n        }\r\n        case \"GET_STATUS_SUCCSESS\":    \r\n        return {\r\n            ...state,\r\n            gettingStatus:false,\r\n            status:action.payload\r\n  \r\n        }\r\n        case \"GET_STATUS_FAILURE\":    \r\n        return {\r\n            ...state,\r\n            gettingStatus:false,\r\n            status:action.payload\r\n        }\r\n\r\n        ///ROOMS get\r\n        case \"GET_ROOMS_REQUEST\":    \r\n        return {\r\n            ...state,\r\n            gettingRooms:true\r\n        }\r\n        case \"GET_ROOMS_SUCCSESS\":    \r\n        return {\r\n            ...state,\r\n            gettingRooms:false,\r\n            roomsData:action.payload\r\n        }\r\n        case \"GET_ROOMS_FAILURE\":    \r\n        return {\r\n            ...state,\r\n            gettingRooms:false,\r\n        }\r\n\r\n        //REMOVE Rooms\r\n        case \"REMOVE_ROOM_SUCCSESS\":\r\n        const filtered = state.roomsData.filter(elem => elem.id !== action.payload)\r\n        return {\r\n            ...state,\r\n            roomsData: [...filtered]\r\n        }\r\n        case \"REMOVE_ROOM_FAILURE\":    \r\n        return {\r\n            ...state,\r\n        }\r\n\r\n\r\n        //Create Rooms\r\n        case \"CREATE_ROOM_SUCCSESS\":\r\n        return {\r\n            ...state,\r\n            roomsData: [...state.roomsData,action.payload]\r\n        }\r\n        case \"CREATE_ROOM_FAILURE\":    \r\n        return {\r\n            ...state,\r\n        }\r\n\r\n\r\n        //Edit Rooms\r\n        case \"EDIT_ROOM_SUCCSESS\":\r\n       const lastData = state.roomsData.filter(elem => elem.id !== action.payload.id)\r\n        return {\r\n            ...state,\r\n            roomsData: [...lastData,action.payload]\r\n        }\r\n        case \"EDIT_ROOM_FAILURE\":    \r\n        return {\r\n            ...state,\r\n        }\r\n\r\n    default:\r\n        return state\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n","const initialState = {\r\n    gettingVisitors: false,\r\n    visitorsData: [],\r\n}\r\n\r\nexport default function visitorsReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"GET_VISITORS_REQUEST\":\r\n            return {\r\n                ...state,\r\n                gettingVisitors:true\r\n            }\r\n            case \"GET_VISITORS_SUCCSESS\":\r\n            return{\r\n                ...state,\r\n                gettingVisitors:false,\r\n                visitorsData:action.payload\r\n            }\r\n            case \"GET_ROOMS_FAILURE\":    \r\n            return {\r\n                ...state,\r\n                gettingVisitors:false,\r\n            }\r\n\r\n  //Create Visitor\r\n  case \"CREATE_VISITOR_SUCCSESS\":\r\n return {\r\n     ...state,\r\n     visitorsData: [...state.visitorsData,action.payload]\r\n }\r\n case \"CREATE_VISITOR_FAILURE\":    \r\n return {\r\n     ...state,\r\n }\r\n\r\n\r\n //Edit Visitor\r\n case \"EDIT_VISITOR_SUCCSESS\":\r\nconst lastData = state.visitorsData.filter(elem => elem.id !== action.payload.id)\r\n return {\r\n     ...state,\r\n     editData: [...lastData,action.payload]\r\n }\r\n case \"EDIT_VISITOR_FAILURE\":    \r\n return {\r\n     ...state,\r\n }\r\n\r\n\r\n //REMOVE Visitors\r\n case \"REMOVE_VISITOR_SUCCSESS\":\r\n    const filtered = state.visitorsData.filter(elem => elem.id !== action.payload)\r\n    return {\r\n        ...state,\r\n        visitorsData: [...filtered]\r\n    }\r\n    case \"REMOVE_VISITOR_FAILURE\":    \r\n    return {\r\n        ...state,\r\n    }\r\n            default:\r\n                return state\r\n    }\r\n}","const initialState = {\r\n  gettingBookings: false,\r\n  bookings: []\r\n};\r\n\r\nexport default function bookingsReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'GET_BOOKINGS_REQUEST':\r\n\r\n      return {\r\n        ...state,\r\n        gettingBookings: true\r\n      }\r\n    case 'GET_BOOKINGS_SUCCSESS':\r\n      return {\r\n        ...state,\r\n        gettingBookings: false,\r\n        bookingsData: action.payload\r\n      }\r\n\r\n    case 'GET_BOOKINGS_FAILURE':\r\n\r\n      return {\r\n        ...state,\r\n        gettingBookings: false\r\n      }\r\n\r\n      case \"CREATE_BOOKING_SUCCSESS\":\r\n        return {\r\n            ...state,\r\n            booingsData: [...state.bookingsData,action.payload]\r\n        }\r\n        case \"CREATE_BOOKING_FAILURE\":    \r\n        return {\r\n            ...state,\r\n        }\r\n       \r\n\r\n        case \"EDIT_BOOKING_SUCCSESS\":\r\n          const lastData = state.bookingsData.filter(elem => elem.id !== action.payload.id)\r\n           return {\r\n               ...state,\r\n               editData: [...lastData,action.payload]\r\n           }\r\n           case \"EDIT_ROOM_FAILURE\":    \r\n           return {\r\n               ...state,\r\n           }\r\n   \r\n\r\n    case 'REMOVE_BOOKING_SUCCSESS':\r\n      const filtered = state.bookingsData.filter(elem => elem.id !== action.payload)\r\n      return {\r\n        ...state,\r\n        bookingsData: [...filtered]\r\n      }\r\n    case \"REMOVE_BOOKING_FAILURE\":\r\n      return {\r\n        ...state,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n\r\n\r\n}","import { combineReducers } from \"redux\";\r\nimport roomsReducer from './rooms.reducer';\r\nimport visitorsReducer from \"./visitors.reducer\";\r\nimport bookingsReducer from './booking.reducers'\r\n\r\nexport default combineReducers({\r\n    rooms:roomsReducer,\r\n    visitors:visitorsReducer,\r\n    bookings:bookingsReducer\r\n})","import {createStore,compose,applyMiddleware} from 'redux';\r\nimport reducers from '../reducer'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst middleWare = [thunk];\r\nconst composeEnh = compose || window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ;\r\nconst store = createStore(\r\n    reducers,\r\n    composeEnh(applyMiddleware(...middleWare)) //|| window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store/store'\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.getElementById('root'));\n\n\n"],"sourceRoot":""}